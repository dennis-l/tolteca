# vim: et ts=2 sts=2 sw=2
---
# An example config for simulating a point source catalog with
# lissajous mapping pattern.
#
# This config is used to make simulated image of a point source
# catalog created externally by Itziar Aretxaga.
#
# The field is about 5 arcmin^2 large, falling into the category of using
# a lissajous pattern.
#
# For the sources list, we added the point source catalog, as well
# as the toltec_array_loading.

# Dict under "simu" key defines the tolteca.simu config.
simu:
  # The identifier of this job.
  # This jobkey is used to identify the simulator run.
  # In particular, it is used as the output directory name for the simulated
  # data files. It is also used by the DPDB to identify the source of
  # the data products.
  jobkey: dsfg_simu
  # This invokes the TolTEC simulator without polarimetry
  instrument:
    name: toltec
  # This list of sources to simulate
  sources:
    # This defines the input path and format of the point source catalog
    # to use
  - type: point_source_catalog
    # This file has to be copied into the workdir.
    # the catalog needs to one of the readable format by
    # `astropy.table.Table`. The catalog shall also have column names
    # defined for each column. These names are used in the colname_map
    # to indicate what information each column has.
    filepath: sources.csv
    # The grouping keyword defines the set of map keys (which map to
    # catalog columns) to be used by the simulator.
    # The array_name makes available the keys ['a1100', 'a1400', 'a2000'],
    # which are mapped to the fluxes of the three arrays
    # 1.1mm, 1.4mm, and 2.0mm.
    # Any categorical columns of the array property table can be used.
    # For example, "nw" for each network, "fg" for each frequency group,
    # etc.
    grouping: 'array_name'
    # Defines the column name maps to internal info key.
    colname_map:
      # The unique name used to identify each source
      name: name
      # The coordinates of the source.
      # Standard names line ra, dec, l, b, etc. are recognized
      # and the correct coordinate frame are created automatically.
      ra: ra
      dec: dec
      # The group keys for the "grouping" specified above.
      a1100: flux_a1100
      a1400: flux_a1400
      a2000: flux_a2000
    # This model provides the bulk of background loading.
  - type: toltec_array_loading
    # Choose from am_q25, am_q50 and am_q75
    # See `totleca.simu.toltec.lmt.LmtAtmosphereData` for details.
    atm_model_name: am_q25
  # Parameters related to execution of the "observation"
  obs_params:
    # The sample frequency used for mapping related data.
    f_smp_mapping: 12Hz
    # The sample frequency used for detector data.
    f_smp_probing: 122Hz
    # The "exposure" time of the simulation.
    # It can be in time unit like 1h or 40min, or in unit of "ct",
    # shortcut for "count", where 1 ct equals to the time needed to
    # finish the mapping pattern.
    # Note that the mapping pattern length is less well-behaving for
    # Lissajous pattern.
    t_exp: 2h
  mapping:
    # This defines a lissajous pattern dancing around in a 0.5arcmin range.
    # Recall that the TolTEC FOV is 4 arcmin, the full coverage will be ~4.5
    # arcmin.
    type: tolteca.simu:SkyLissajousModel
    # the extend of the lissajous
    x_length: 0.5 arcmin
    y_length: 0.5 arcmin
    # the angular frequency of the pattern.
    # the average linear speed can be estimated as
    # hypot(x_length * x_omega, y_length * y_omega)
    x_omega: 9.2 rad/s
    # these two omegas typically are not so "reducible" so the lissajous
    # pattern have more uniform coverages.
    y_omega: 8 rad/s
    # the phase offset between the x and y motion. 45 deg is a good
    # heuristics.
    delta: 45. deg
    # The rotation of the pattern, with respect to the +lon direction
    # of the ref_frame below.
    rot: 0 deg
    # The reference frame used to define the mapping pattern.
    # Possible values are 'icrs' and 'altaz'.
    ref_frame: altaz
    # The target at which to execute the pattern.
    # the target can be specified in any form understood
    # by the SIMBAD name lookup service.
    target: 0.05d 0.05d
    # The time (UT) of the observation.
    t0: 2021-04-04T16:35:00
